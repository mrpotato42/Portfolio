---
const { polygon, mt, txt, link } = Astro.props;
const polygons = [
  {
    id: "p1",
    points: "30.4,7.4 8.7,22.9 1,7.8 15.3,2",
    shadowDy: "-0.5",
    shadowDx: "-2",
    shape: "skewX(25) skewY(-28)",
    pathImg: "/images/experience.jpg",
    positionX:"0",
    positionY:"25",


  },
  {
    id: "p2",
    points: "27.7,11.9 7.8,2 1,9.7 25.1,22.7",
    shadowDy: "-0.5",
    shadowDx: "1.5",
    shape: "skewX(-10) skewY(26)",
    pathImg: "/images/projects.jpg",
    positionX:"7",
    positionY:"13",

    
  },
  {
    id: "p3",
    points: "25.6,18.3 14.4,24.7 1,13.4 21,2",
    shadowDy: "-1",
    shadowDx: "-1.5",
    shape: "skewX(20) skewY(-26)",
    pathImg: "/images/window.jpg",
    positionX:"2",
    positionY:"31",
    
  },
  {
    id: "p4",
    points: "14,26.5 4,22 1,2 20,7",
    shadowDy: "-0.5",
    shadowDx: "1.5",
    shape: "skewX(-10) skewY(22)",
    pathImg: "/images/profile.jpg",
    positionX:"3",
    positionY:"22",
    
  },
];
---

{
  polygons
    .filter((figure) => figure.id === polygon)
    .map(({ points, shadowDy, shadowDx, pathImg, shape, positionX, positionY }) => (
      <div class={`${mt} hover:z-30 z-10`}><a href={link} target="_blank">
        <svg

          class="hover:stroke-indigo-500 hover:stroke-[0.4] hover:scale-[1.33] transition h-full w-full dark:hover:stroke-slate-50"
          xmlns="http://www.w3.org/2000/svg"
          viewBox="-5 0 40 40"
        >
          <defs>
            <filter id={`f1-${polygon}`}>
              <feDropShadow
                dx={shadowDx}
                dy={shadowDy}
                stdDeviation="0.4"
                flood-opacity="0.7"
              />
            </filter>
            <pattern
              id={`p1-${polygon}`}
              width="100%"
              height="100%"
              patternContentUnits="objectBoundingBox"
            >
              <image
                href={`${pathImg}`}
                height="1"
                width="1"
                preserveAspectRatio="none"
              />
            </pattern>
          </defs>
          <text
            filter={`url(#f1-${polygon})`}
            x={positionX}
            y={positionY}
            fill="black"
            stroke-width="0.05"
            font-size="3"
            transform={`${shape}`}
          >
            {txt}

          </text>
          <polygon
            filter={`url(#f1-${polygon})`}
            points={points}
            fill={`url(#p1-${polygon})`}
           
          >

          </polygon>
        </svg></a>
      </div>
    ))
}
