---
const { polygon, mt, txt } = Astro.props;
const polygons = [
    {
        id: "p1",
        points: "16.8,-2.2 -5.1,13.7 -13.4,-2.6 1.7,-8.8",
        shadowDy: "-0.5",
        shadowDx: "-2",
        shape:"skewX(25) skewY(-28)",
        pathImg: "/images/experience.jpg",
    },
    {
        id: "p2",
        points: "12.3,0.6 -7.6,-9.3 -14.4,-1.6 9.7,11.4",
        shadowDy: "-0.5",
        shadowDx: "1.5",
        shape:"skewX(-10) skewY(26)",
        pathImg: "/images/projects.jpg",
    },
    {
        id: "p3",
        points: "9.6,3.3 -1.6,9.7 -15,-1.6 5,-13",
        shadowDy: "-1",
        shadowDx: "-1.5",
        shape:"skewX(20) skewY(-26)",
        pathImg: "/images/window.jpg",
    },
    {
        id: "p4",
        points: "3,9.5 -7,5 -10,-15 9,-10",
        shadowDy: "-0.5",
        shadowDx: "1.5",
        shape:"skewX(-10) skewY(22)",
        pathImg: "/images/profile.jpg",
    },
    
];

---

{
    polygons
        .filter((figure) => figure.id === polygon)
        .map(({ points, shadowDy, shadowDx, pathImg, shape}) => (
            <div class={`${mt} absolute hover:z-50 z-10`}>
                <svg class="hover:scale-[1.33] transition h-full w-full" xmlns="http://www.w3.org/2000/svg" viewBox="-20 -20 40 40">
                    <defs>
                        <filter id={`f1-${polygon}`}>
                            <feDropShadow dx={shadowDx} dy={shadowDy} stdDeviation="0.4" flood-opacity="0.7" />
                        </filter>
                        <pattern id={`p1-${polygon}`} width="100%" height="100%" patternContentUnits="objectBoundingBox">
                            <image href={`${pathImg}`} height="1" width="1" preserveAspectRatio="none"/>
                        </pattern>
                    </defs>
                    <text filter={`url(#f1-${polygon})`} x="-10" y="12" fill="red" font-size="3" transform={`${shape}`}>{txt}
                        <animateMotion
      path="M0,0 q10,6 -8,0 q10,-6 10,0"
      begin="0.1s"
      dur="5s"
      repeatCount="indefinite" />
                    </text>
                    <polygon 
                        filter={`url(#f1-${polygon})`} 
                        points={points} 
                        fill={`url(#p1-${polygon})`} 
                    ><animateMotion
      path="M0,0 q10,6 -8,0 q10,-6 10,0"
      begin="0.1s"
      dur="5s"
      repeatCount="indefinite" /></polygon>
                </svg>
            </div>
        ))
}
